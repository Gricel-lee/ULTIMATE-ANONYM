// This DTMC models a smart lighting system that switches, say every half minute, between three levels
// of lighting: low, medium and high, depending on whether a second system reports that it detecting a
// moving object in the area where the system operates or not.
//
// The probability that a moving object is reported when the system makes switch decisions is pDetected.

dtmc

// Dependency parameter from the other model
const double pDetected;

module LightingSystem
  lightLevel : [0..2] init 0; // 0=low, 1=medium, 2=high

  // Switch to high if a moving object is being detected; otherwise, stay at low
  [] lightLevel=0 -> pDetected:(lightLevel'=2) + (1-pDetected):(lightLevel'=0);

  // Switch to high if a moving object is being detected; otherwise, switch to low  
  [] lightLevel=1 -> pDetected:(lightLevel'=2) + (1-pDetected):(lightLevel'=0);
  
  // Stay at high if a moving object is being detected; otherwise, switch to medium  
  [] lightLevel=2 -> pDetected:(lightLevel'=2) + (1-pDetected):(lightLevel'=1);
endmodule

rewards "low"
  lightLevel=0 : 1/10000;
endrewards

rewards "medium"
  lightLevel=1 : 1/10000;
endrewards

// 
// We calculate the dependency parameters required for the other model as:
//
// pLow = R{"low"}=? [C<=10000] / 10000
// pMed = R{"medium"}=? [C<=10000] / 10000
//
// Note: Very interesting plots are generated for these when running PRISM experiments for the two
//       properties above!
//
